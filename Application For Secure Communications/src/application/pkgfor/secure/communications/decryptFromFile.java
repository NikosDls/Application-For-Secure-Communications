/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package application.pkgfor.secure.communications;

import java.awt.List;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.security.PrivateKey;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;

/**
 *
 * @author NikosDls
 */
public class decryptFromFile extends javax.swing.JFrame {

    /**
     * Creates new form decryptFromFile
     *
     * @param width
     * @param height
     */
    public decryptFromFile(int width, int height) {
        initComponents();
        this.setLocation(width, height);

        String[] algorithms = {"RSA", "AES"};
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(algorithms);
        ChooseAlgorithm.setModel(model);

        jLabel3.setVisible(false);
        PathField.setVisible(false);
        PrivateBrowse.setVisible(false);
        jLabel5.setVisible(false);
        jLabel6.setVisible(false);
        KeyField.setVisible(false);
        IVField.setVisible(false);
        Finish.setVisible(false);
    }

    public decryptFromFile() {
        this(0, 0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ChooseAlgorithm = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        OK = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        PathField = new javax.swing.JTextField();
        PrivateBrowse = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        CipherField = new javax.swing.JTextField();
        FileBrowse = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        KeyField = new javax.swing.JTextField();
        IVField = new javax.swing.JTextField();
        Finish = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Application For Secure Communications");
        setResizable(false);

        ChooseAlgorithm.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        ChooseAlgorithm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ChooseAlgorithm.setAutoscrolls(true);

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Step 2: Decrypt the message!");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel2.setName(""); // NOI18N

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Choose the algorithm to decrypt the file:");
        jLabel1.setAutoscrolls(true);

        OK.setText("OK");
        OK.setAutoscrolls(true);
        OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Private key path:");

        PrivateBrowse.setText("Browse");
        PrivateBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrivateBrowseActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Cipher text path:");
        jLabel4.setAutoscrolls(true);

        FileBrowse.setText("Browse");
        FileBrowse.setAutoscrolls(true);
        FileBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileBrowseActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Key phrase:");

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Initialization Vector phrase:");

        Finish.setFont(new java.awt.Font("Calibri", 0, 20)); // NOI18N
        Finish.setText("Decrypt and save file");
        Finish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinishActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(5, 5, 5)
                        .addComponent(CipherField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(FileBrowse))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(5, 5, 5)
                        .addComponent(ChooseAlgorithm, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(OK, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(PathField, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(PrivateBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(KeyField, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(IVField, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(Finish, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FileBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CipherField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChooseAlgorithm, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OK, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PathField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PrivateBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(KeyField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel6))
                    .addComponent(IVField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Finish, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKActionPerformed
        String choice = (String) ChooseAlgorithm.getSelectedItem();

        if (choice.equals("RSA")) {
            jLabel5.setVisible(false);
            jLabel6.setVisible(false);
            KeyField.setVisible(false);
            IVField.setVisible(false);

            jLabel3.setVisible(true);
            PathField.setVisible(true);
            PrivateBrowse.setVisible(true);
        } else if (choice.equals("AES")) {
            jLabel3.setVisible(false);
            PathField.setVisible(false);
            PrivateBrowse.setVisible(false);

            jLabel5.setVisible(true);
            jLabel6.setVisible(true);
            KeyField.setVisible(true);
            IVField.setVisible(true);
        }
        Finish.setVisible(true);
    }//GEN-LAST:event_OKActionPerformed

    private void PrivateBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrivateBrowseActionPerformed
        JFileChooser fc = new JFileChooser();

        fc.setFileSelectionMode(fc.FILES_ONLY);
        fc.setCurrentDirectory(new java.io.File(System.getProperty("user.home") + "/Desktop"));

        fc.setDialogTitle("Choose private key");
        if (fc.showDialog(null, "Ok") == JFileChooser.APPROVE_OPTION) {
            PathField.setText(fc.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_PrivateBrowseActionPerformed

    private void FileBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileBrowseActionPerformed
        JFileChooser fc = new JFileChooser();

        fc.setFileSelectionMode(fc.FILES_ONLY);
        fc.setCurrentDirectory(new java.io.File(System.getProperty("user.home") + "/Desktop"));

        fc.setDialogTitle("Choose cipher text");
        if (fc.showDialog(null, "Ok") == JFileChooser.APPROVE_OPTION) {
            CipherField.setText(fc.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_FileBrowseActionPerformed

    private void FinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinishActionPerformed

        try {
            BufferedReader in = new BufferedReader(new FileReader(CipherField.getText()));
            String s;

            ArrayList<String> list = new ArrayList<String>();
            while ((s = in.readLine()) != null) {
                list.add(s);
                System.out.println(s);
            }

            String cipherText = "";

            for (String str : list) {
                cipherText += str;
            }

            RSAalgorithm rsa = new RSAalgorithm();

            ObjectInputStream inputStream = new ObjectInputStream(new FileInputStream(PathField.getText()));
            final PrivateKey privateKey = (PrivateKey) inputStream.readObject();

            String plainText = rsa.decrypt(cipherText, privateKey);

            JFileChooser fc = new JFileChooser();

            fc.setFileSelectionMode(fc.DIRECTORIES_ONLY);
            fc.setCurrentDirectory(new java.io.File(System.getProperty("user.home") + "/Desktop"));

            fc.setDialogTitle("Save the decrypted text");
            if (fc.showDialog(null, "Ok") == JFileChooser.APPROVE_OPTION) {
                BufferedWriter out = new BufferedWriter(new FileWriter(fc.getSelectedFile().getAbsolutePath() + "\\plainText.txt"));
                out.write(plainText);
                out.close();
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_FinishActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(decryptFromFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(decryptFromFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(decryptFromFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(decryptFromFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new decryptFromFile().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ChooseAlgorithm;
    private javax.swing.JTextField CipherField;
    private javax.swing.JButton FileBrowse;
    private javax.swing.JButton Finish;
    private javax.swing.JTextField IVField;
    private javax.swing.JTextField KeyField;
    private javax.swing.JButton OK;
    private javax.swing.JTextField PathField;
    private javax.swing.JButton PrivateBrowse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration//GEN-END:variables
}
